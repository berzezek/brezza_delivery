from delivery.models import Order, DeliverySchedule, Schedule, Customer
from django.utils import timezone
from datetime import timedelta, datetime

def delivered_time_to_deadline():
    '''
    Функция закрывает все заказы, у которых delivered_time = None.

    Вызывается каждый день в 23:59.
    Существует для того, чтобы закрыть все заказы, которые забыли или не получилось закрыть вручную.
    Назначает время доставки равным времени срока заказа.
    '''
    # Выбор всех объектов Order, у которых delivered_time = None
    orders_to_update = Order.objects.filter(delivered_time__isnull=True)

    for order in orders_to_update:
        order.delivered_time = order.dead_line
        order.save()

def create_today_orders():
    '''
    Создание заказов на сегодня.

    Каждый 10 минут проверяет, есть ли у заказчиков расписание и если есть, то создает заказ на сегодня, 
    при условии что текущее время находится в промежутке между временем доставки и временем доставки минус 1 час 10 минут.
    т.е. если у заказчика есть расписание на сегодня в 10:00, то заказ будет создан с 8:50 до 10:00.
        
        Мы проходим списком по DeliverySchedule и смотрим все связанные с ними Schedule.
        Находим Schedule, у которых day_of_week совпадает с сегодняшним днем недели и время доставки в промежутке между временем доставки и временем доставки минус 1 час 10 минут.
        Создаем заказ с учетом временной зоны.
    '''
    today = timezone.localtime(timezone.now()).date()
    current_local_time = timezone.localtime(timezone.now()).time()

    delivery_schedules = DeliverySchedule.objects.all()
    for ds in delivery_schedules:
        if ds.delivery_schedule.exists():  # используйте `.exists()` для проверки наличия связанных объектов
            for schedule in ds.delivery_schedule.all():
                # если день совпадает с сегодняшним днем
                # и текущее время в промежутке между временем доставки и временем доставки минус 1 час 10 минут
                dt = timezone.localtime(timezone.make_aware(datetime.combine(today, schedule.schedule_time)))
                time_threshold = dt - timedelta(hours=1, minutes=10)
                if str(schedule.day_of_week) == str(today.weekday()) and time_threshold.time() <= current_local_time <= schedule.schedule_time:
                    # создание заказа с учетом временной зоны
                    naive_deadline = datetime.combine(today, schedule.schedule_time)
                    aware_deadline = timezone.make_aware(naive_deadline)
                    order, created = Order.objects.get_or_create(
                        customer=ds.customer,
                        dead_line=aware_deadline
                    )
                    if created:
                        print(f'Создан заказ для {ds.customer.title} на {aware_deadline}')
                    if order:
                        print(f'Заказ для {ds.customer.title} уже существует')

schedule = [
    {'buka': {'Понедельник': ['08:10', '18:35'], 'Вторник': ['08:10', '18:35'], 'Среда': ['08:10', '18:20'], 'Четверг': ['08:10', '18:15'], 'Пятница': ['08:10', '18:40'], 'Суббота': ['08:40', '18:40']}}, 
    {'buka2': {'Понедельник': ['07:30', '13:00', '19:15'], 'Вторник': ['07:00', '13:00', '19:20'], 'Среда': ['07:25', '13:25', '19:20'], 'Четверг': ['07:10', '13:25', '19:00'], 'Пятница': ['07:15', '13:30', '19:30'], 'Суббота': ['07:40', '13:30', '17:50'], 'Воскресенье': ['07:30', '17:50']}}, 
    {'centris': {'Понедельник': ['10:35'], 'Вторник': ['10:35'], 'Среда': ['10:00'], 'Четверг': ['10:00'], 'Пятница': ['08:00'], 'Суббота': ['10:35'], 'Воскресенье': ['10:35']}}, 
    {'chekhova': {'Понедельник': ['07:35', '13:20', '17:50'], 'Вторник': ['07:50', '13:45', '17:55'], 'Среда': ['08:40', '13:50', '19:00'], 'Четверг': ['13:45'], 'Пятница': ['07:50', '13:20', '17:50'], 'Суббота': ['07:55', '13:20', '17:50'], 'Воскресенье': ['07:55', '18:00']}}, 
    {'chekhovl': {'Понедельник': ['08:00', '13:40', '18:10'], 'Вторник': ['08:00', '13:40', '18:15'], 'Среда': ['07:45', '13:40', '18:10'], 'Четверг': ['07:50', '13:50', '18:10'], 'Пятница': ['07:45', '13:50', '18:15'], 'Суббота': ['07:50', '13:40', '18:20'], 'Воскресенье': ['07:50', '18:20']}}, 
    {'chekhovm': {'Понедельник': ['08:15', '13:00', '18:35'], 'Вторник': ['08:15', '13:30', '18:40'], 'Среда': ['07:35', '13:30', '18:00'], 'Четверг': ['07:35', '13:40', '18:00'], 'Пятница': ['13:40', '18:00'], 'Суббота': ['08:15', '13:40', '18:00'], 'Воскресенье': ['08:25', '18:00']}}, 
    {'chekhovs': {'Понедельник': ['09:00', '17:15'], 'Вторник': ['09:00', '17:30'], 'Среда': ['08:30', '17:30'], 'Четверг': ['08:45', '17:15'], 'Пятница': ['07:00', '17:35'], 'Суббота': ['08:50', '16:40'], 'Воскресенье': ['08:50', '16:40']}}, 
    {'chekhovyu': {'Понедельник': ['07:35', '12:45', '17:35'], 'Вторник': ['07:35', '13:15', '17:35'], 'Среда': ['08:10', '13:15', '18:40'], 'Четверг': ['08:15', '13:20', '18:40'], 'Пятница': ['07:35', '12:40', '17:35'], 'Суббота': ['07:30', '12:40', '17:35'], 'Воскресенье': ['07:35', '17:35']}}, 
    {'humo': {'Понедельник': ['07:35', '13:00', '20:00'], 'Вторник': ['07:35', '13:15', '20:00'], 'Среда': ['07:40', '13:10', '20:00'], 'Четверг': ['07:40', '13:15', '19:45'], 'Пятница': ['07:40', '13:10', '20:15'], 'Суббота': ['08:10']}}, 
    {'lumer': {'Пятница': ['09:00'], 'Суббота': ['10:00'], 'Воскресенье': ['10:00']}}, {'mams': {'Понедельник': ['07:20', '12:40', '17:20'], 'Вторник': ['07:20', '13:30', '17:20'], 'Среда': ['08:00', '13:40', '18:30'], 'Четверг': ['08:05', '13:30', '18:30'], 'Пятница': ['07:20', '12:30', '17:25'], 'Суббота': ['07:25', '12:35', '17:20'], 'Воскресенье': ['07:25', '17:25']}}, 
    {'more': {'Понедельник': ['21:10'], 'Вторник': ['21:10'], 'Среда': ['21:30'], 'Четверг': ['21:30'], 'Пятница': ['21:30'], 'Суббота': ['10:00'], 'Воскресенье': ['10:00']}}, 
    {'panda': {}}, 
    {'profit': {'Понедельник': ['09:30'], 'Вторник': ['09:30'], 'Среда': ['08:25'], 'Четверг': ['08:30'], 'Пятница': ['09:00'], 'Суббота': ['09:35'], 'Воскресенье': ['09:35']}}, 
    {'rosi': {'Понедельник': ['08:10', '19:35'], 'Среда': ['08:00', '19:35'], 'Пятница': ['19:45'], 'Суббота': ['17:50'], 'Воскресенье': ['18:00']}}
]

def create_delivery_schedule(schedule_data: list) -> None:
    # 1. Создание записей в модели Customer.
    for schedule_item in schedule_data:
        customer_name = list(schedule_item.keys())[0]
        Customer.objects.create(title=customer_name)

    # 2. Создание записей в модели Schedule для каждого времени в расписании и связывание с записями в модели Customer и DeliverySchedule.
    for schedule_item in schedule_data:
        customer_name = list(schedule_item.keys())[0]
        customer_obj = Customer.objects.get(title=customer_name)
        delivery_schedule_obj = DeliverySchedule.objects.create(customer=customer_obj)
        for day_of_week, times in schedule_item[customer_name].items():
            day_of_week_mapping = {
                'Понедельник': '0', 'Вторник': '1', 'Среда': '2', 'Четверг': '3', 'Пятница': '4', 'Суббота': '5', 'Воскресенье': '6'}
            for time in times:
                hour, minute = time.split(':')
                schedule_obj = Schedule.objects.create(
                    day_of_week=day_of_week_mapping[day_of_week],
                    schedule_time=f"{hour}:{minute}"
                )
                delivery_schedule_obj.delivery_schedule.add(schedule_obj)
